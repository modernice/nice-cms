// Code generated by MockGen. DO NOT EDIT.
// Source: gallery.go

// Package mock_gallery is a generated GoMock package.
package mock_gallery

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	gallery "github.com/modernice/cms/media/image/gallery"
)

// MockStackRepository is a mock of StackRepository interface.
type MockStackRepository struct {
	ctrl     *gomock.Controller
	recorder *MockStackRepositoryMockRecorder
}

// MockStackRepositoryMockRecorder is the mock recorder for MockStackRepository.
type MockStackRepositoryMockRecorder struct {
	mock *MockStackRepository
}

// NewMockStackRepository creates a new mock instance.
func NewMockStackRepository(ctrl *gomock.Controller) *MockStackRepository {
	mock := &MockStackRepository{ctrl: ctrl}
	mock.recorder = &MockStackRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStackRepository) EXPECT() *MockStackRepositoryMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockStackRepository) Delete(arg0 context.Context, arg1 gallery.Stack) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockStackRepositoryMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockStackRepository)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockStackRepository) Get(arg0 context.Context, arg1 uuid.UUID) (gallery.Stack, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(gallery.Stack)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockStackRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockStackRepository)(nil).Get), arg0, arg1)
}

// Save mocks base method.
func (m *MockStackRepository) Save(arg0 context.Context, arg1 gallery.Stack) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockStackRepositoryMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockStackRepository)(nil).Save), arg0, arg1)
}
